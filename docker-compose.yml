version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: meufuturo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: meufuturo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: meufuturo123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meufuturo-network

  backend:
    build:
      context: ./meuFuturoBackend
      dockerfile: Dockerfile
    container_name: meufuturo-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:meufuturo123@postgres:5432/meufuturo"
      SECRET_KEY: "your-super-secret-jwt-key-change-in-production"
      ENVIRONMENT: "development"
      CORS_ORIGINS: "http://localhost:3000,http://127.0.0.1:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meufuturo-network

  frontend:
    build:
      context: ./meuFuturoFrontend
      dockerfile: Dockerfile
    container_name: meufuturo-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: "http://backend:8000/api/v1"
      NEXT_PUBLIC_APP_NAME: "MeuFuturo"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meufuturo-network

volumes:
  postgres_data:
    driver: local

networks:
  meufuturo-network:
    driver: bridge
